plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev.legacyforge'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")

    config("${mod_id}.mixins.json")
    config("${mod_id}.forge.mixins.json")
}

legacyForge {
    version = "${minecraft_version}-${forge_version}"

    //validateAccessTransformers = true

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers = ["src/main/resources/META-INF/accesstransformer.cfg"]
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        client {
            client()
            setDevLogin(false)
            jvmArguments.add('-XX:+AllowEnhancedClassRedefinition')
        }
        client2 {
            client()
            jvmArguments.add('-XX:+AllowEnhancedClassRedefinition')
            programArguments.addAll('--username', 'Dev2')
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
            jvmArguments.add('-XX:+AllowEnhancedClassRedefinition')
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'
boolean enableMNS = true
boolean enableFTBTeams = true
dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    compileOnly project(":common")
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
    modRuntimeOnly ("curse.maven:playeranimator-658587:4587214")

    if (enableMNS){
        modImplementation ("curse.maven:library-of-exile-398780:6157677")
        modImplementation ("curse.maven:mine-and-slash-reloaded-306575:6157680")
        modImplementation ("curse.maven:orbs-of-crafting-1182250:6133170")
    } else {
        modCompileOnly ("curse.maven:library-of-exile-398780:6157677")
        modCompileOnly ("curse.maven:mine-and-slash-reloaded-306575:6157680")
    }



    modRuntimeOnly ("top.theillusivec4.curios:curios-forge:5.11.0+1.20.1")
    modCompileOnly ("top.theillusivec4.curios:curios-forge:5.11.0+1.20.1:api")
    modImplementation ("maven.modrinth:nirvana-library:${project.name}-${minecraft_version}-${lib_version}")
    modImplementation("maven.modrinth:common-network:1.0.5-1.20.1"){
        transitive = false
    }


    modRuntimeOnly ("curse.maven:architectury-api-419699:5137938")
    if (enableFTBTeams){
        modImplementation ("curse.maven:ftb-library-forge-404465:6164053")
        modImplementation ("curse.maven:ftb-teams-forge-404468:6130786")
    } else {
        modCompileOnly ("curse.maven:ftb-library-forge-404465:6164053")
        modCompileOnly ("curse.maven:ftb-teams-forge-404468:6130786")
    }


    modImplementation ("me.fzzyhmstrs:fzzy_config:${fzzy_config_version}+${minecraft_version}+forge")
    modImplementation("thedarkcolour:kotlinforforge:4.11.0")
}


jar {
    finalizedBy('reobfJar')
    manifest.attributes([
            "MixinConfigs": "${mod_id}.mixins.json,${mod_id}.forge.mixins.json"
    ])
}





